# -*- coding: utf-8 -*-
"""Untitled16.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tmH8MrKhPSAXVNaP9eREbC6aztsJqT8t
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error,mean_absolute_error,r2_score
from sklearn.linear_model import LinearRegression,Ridge,Lasso
from sklearn.model_selection import GridSearchCV,cross_val_score,KFold

df = pd.read_csv('/content/retail_sales_dataset.csv')
df.head()

print('Rows ---->',df.shape[0])
print('column --->',df.shape[1])

df.info()

df.dtypes

df.size

df.describe()

df.isna().sum()

df.duplicated().sum()

df[:2]

df.head()

df[:5]

x=df.iloc[:,:-1]
x

y = df.iloc[:,-1:]

from sklearn.model_selection import train_test_split
xtrain,xtest,ytrain,ytest  = train_test_split(x,y,test_size=0.3,random_state=43)

xtrain,ytrain

xtest,ytest

from sklearn.linear_model import LinearRegression,Ridge,Lasso
model = LinearRegression()

from sklearn.metrics import mean_squared_error,mean_absolute_error,r2_score

from sklearn.model_selection import GridSearchCV,cross_val_score,KFold

cv = KFold(n_splits=5,shuffle=True, random_state=0)
cv

param_grid = {'normalize':['deprecated'],
    'copy_X':[True],
    'n_jobs':[-1,1,2,-2],
    'positive':[False],
    'fit_intercept':[True]
    }

grid_model=GridSearchCV(model,
    param_grid=param_grid,
    n_jobs=-1,
    cv=5)
grid_model

grid_model.estimator

grid_model.get_params()

ridgemodel =Ridge()
ridgemodel

param_ridge={
    'alpha' :[1.0,0.01,2,3,0.05,0.07,0.09,0.1,0.3,0.6,0.9],
    'fit_intercept':[True],
    'normalize':['deprecated'],
    'copy_X':[True],
    'max_iter':[1000,2000,5000,10000,13000,15000],
    'tol':[0.001,0.004,0.002,0.003],
    'solver':['auto','saga'],
    'positive':[True],
    'random_state':[0]
}

ridge_model=GridSearchCV(ridgemodel,
    param_grid=param_ridge,
    cv=5)
ridge_model

lasso_grid_para={
    'alpha':[1.0,0.01,0.2,0.3,0.01,0.02],
    'fit_intercept':[True],
    'normalize':['deprecated'],
    'copy_X':[True],
    'max_iter':[1000,2000,5000,7000,10000,13000,15000],
    'positive':[False],
    'random_state':[0],
    'selection':['cyclic']
}

grid_model_lasso=GridSearchCV(lasso,
    param_grid=lasso_grid_para,
    n_jobs=-1,
    cv=5)
grid_model_lasso

grid_model_lasso.get_params()

grid_model_lasso.set_params()